@using PcClinicApi.Models
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer

<h3>Ticket queue</h3>

@if (tickets == null)
{
    <p>Tickets not found</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>TicketId</th>
                <th>DeviceId</th>
                <th>Reported problem</th>
                <th>Technician intake notes</th>
                <th>Ticket type</th>
                <th>Repair status</th>
                <th>Ticket time</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Ticket ticket in tickets)
            {
                <tr>
                    <td>@ticket.TicketId</td>
                    <td>@ticket.DeviceId</td>
                    <td>@ticket.ReportedProblem</td>
                    <td>@ticket.TechIntakeNotes</td>
                    <td>@ticket.TicketType</td>
                    <td>@ticket.RepairStatus</td>
                    <td>@ticket.TicketTime</td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    private List<Ticket>? tickets = new();
    protected async override Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("PcClinicApi");
        tickets = await client.GetFromJsonAsync<List<Ticket>>("/GetOpenTickets");
    }
}