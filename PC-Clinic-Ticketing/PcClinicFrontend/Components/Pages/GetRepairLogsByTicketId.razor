@using PcClinicApi.Models
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer

<h3>Get repair logs by ticketId</h3>

<table>
    <thead>
        <tr>
            <th>TicketId</th>
            <th>TechnicianId</th>
            <th>RepairLogId</th>
            <th>Log type</th>
            <th>Log time</th>
            <th>Log notes</th>
        </tr>
    </thead>
    <tbody>
        @foreach (RepairLog repairLog in repairLogs)
        {
            <tr>
                <td>@repairLog.TicketId</td>
                <td>@repairLog.UserId</td>
                <td>@repairLog.RepairLogId</td>
                <td>@repairLog.LogType</td>
                <td>@repairLog.LogTime</td>
                <td>@repairLog.LogNotes</td>
            </tr>
        }
    </tbody>
</table>

@code {
    //temporarily hard-coded
    public int ticketId = 3;

    public List<RepairLog> repairLogs = new();

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, $"https://localhost:7224/GetRepairLogsByTicketId/{ticketId}");

        var client = HttpClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            repairLogs = await client.GetFromJsonAsync<List<RepairLog>>($"https://localhost:7224/GetRepairLogsByTicketId/{ticketId}");
        }
    }
}
