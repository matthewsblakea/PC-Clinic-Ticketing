@using PcClinicApi.Models
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer

<h3>Devices</h3>

@if (devices == null)
{
    <p>Devices not found</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>UserId</th>
                <th>DeviceId</th>
                <th>Device type</th>
                <th>Model number</th>
                <th>Serial number</th>
                <th>Device password</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Device device in devices)
            {
                <tr>
                    <td>@device.UserId</td>
                    <td>@device.DeviceId</td>
                    <td>@device.DeviceType</td>
                    <td>@device.ModelNumber</td>
                    <td>@device.SerialNumber</td>
                    <td>@device.DevicePassword</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Device>? devices = new();
    protected async override Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("PcClinicApi");
        devices = await client.GetFromJsonAsync<List<Device>>("api/Devices");
    }
}
