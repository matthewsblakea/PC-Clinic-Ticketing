@using PcClinicApi.Models
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory HttpClientFactory
@rendermode InteractiveServer

@if (customers == null)
{
    <p>Customer accounts not found</p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>UserId</th>
                <th>First name</th>
                <th>Last name</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Address</th>
                <th>City</th>
                <th>State</th>
                <th>UserType</th>
            </tr>
        </thead>
        <tbody>
            @foreach (User customer in customers)
            {
                <tr>
                <td>@customer.UserId</td>
                <td>@customer.FirstName</td>
                <td>@customer.LastName</td>
                <td>@customer.Phone</td>
                <td>@customer.Email</td>
                <td>@customer.Address</td>
                <td>@customer.City</td>
                <td>@customer.State</td>
                <td>@customer.UserType</td>
                </tr>
            }
        </tbody>
    </table>
}



@code{
        private List<User>? customers = new();
        protected async override Task OnInitializedAsync()
        {
            var client = HttpClientFactory.CreateClient("PcClinicApi");
            customers = await client.GetFromJsonAsync<List<User>>("/GetCustomers");
        }
}